{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styled from 'styled-components';\nimport { useNavigation } from '@react-navigation/native';\nimport NavCards from \"../components/navCards\";\nimport BottomNav from \"../components/bottomNav\";\nimport ItemCard from \"../components/itemCard\";\nimport { firestoreDb, auth } from \"../firebase\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MainArea = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tflex: 1;\\n\\tjustify-content: flex-end;\\n\\t\", \";\\n\\tbackground-color: #D77FA1;\\n\"])), StatusBar.currentHeight && \"margin-top: \" + StatusBar.currentHeight + \"px\");\nvar Nav = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"height: 10%;\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tpadding: 0 20px;\\n\\tbackground-color: white;\\n\"])));\nvar UserName = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n\\tfont-weight: bold;\\n\\tcolor: #3F3F3F;\\n\\tfont-size: 20px;\\n\"])));\n\nvar Home = function Home() {\n  var _auth$currentUser;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFetching = _useState2[0],\n      setIsFetching = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Res = _useState4[0],\n      setRes = _useState4[1];\n\n  useEffect(function () {\n    ReadData();\n  }, []);\n  var user = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email.split('@')[0];\n\n  var _onRefresh = function onRefresh() {\n    ReadData();\n    setIsFetching(true);\n  };\n\n  var arr = [];\n\n  var ReadData = function ReadData() {\n    var querySnapshot;\n    return _regeneratorRuntime.async(function ReadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDocs(collection(firestoreDb, 'products')));\n\n          case 2:\n            querySnapshot = _context.sent;\n            querySnapshot.forEach(function (doc) {\n              arr.push(doc.data());\n            });\n            setRes(arr);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(MainArea, {\n    children: [_jsx(Nav, {\n      children: _jsxs(UserName, {\n        children: [\"Welcome \", user]\n      })\n    }), _jsx(FlatList, {\n      data: [{\n        name: 1\n      }],\n      renderItem: function renderItem() {\n        return _jsx(ItemCard, {});\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      },\n      contentContainerStyle: {\n        padding: 16\n      },\n      onRefresh: function onRefresh() {\n        return _onRefresh();\n      },\n      refreshing: isFetching\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/react native apps/saad app/saadApp/screens/home.js"],"names":["React","useState","styled","useNavigation","NavCards","BottomNav","ItemCard","firestoreDb","auth","collection","getDocs","MainArea","SafeAreaView","StatusBar","currentHeight","Nav","View","UserName","Text","Home","isFetching","setIsFetching","Res","setRes","useEffect","ReadData","user","currentUser","email","split","onRefresh","arr","querySnapshot","forEach","doc","push","data","name","item","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA6B,0BAA7B;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAASC,WAAT,EAAsBC,IAAtB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;;;AAEA,IAAMC,QAAQ,GAAGT,MAAM,CAACU,YAAV,8JAGXC,SAAS,CAACC,aAAV,qBAA0CD,SAAS,CAACC,aAApD,OAHW,CAAd;AAOA,IAAMC,GAAG,GAAGb,MAAM,CAACc,IAAV,wOAAT;AASA,IAAMC,QAAQ,GAAGf,MAAM,CAACgB,IAAV,2IAAd;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAElB,kBAAoClB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOmB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,mBAAwBpB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAQqB,GAAR;AAAA,MAAaC,MAAb;;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACfC,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT;AAKA,MAAMC,IAAI,wBAAGlB,IAAI,CAACmB,WAAR,qBAAG,kBAAkBC,KAAlB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAb;;AAEA,MAAMC,UAAS,GAAG,SAAZA,SAAY,GAAM;AACvBL,IAAAA,QAAQ;AACRJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,MAAMU,GAAG,GAAG,EAAZ;;AAEA,MAAMN,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYf,OAAO,CAACD,UAAU,CAACF,WAAD,EAAc,UAAd,CAAX,CADnB;;AAAA;AACVyB,YAAAA,aADU;AAEhBA,YAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAE9BH,cAAAA,GAAG,CAACI,IAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT;AACA,aAHD;AAIMb,YAAAA,MAAM,CAACQ,GAAD,CAAN;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAUA,SACC,MAAC,QAAD;AAAA,eACC,KAAC,GAAD;AAAA,gBACC,MAAC,QAAD;AAAA,+BACUL,IADV;AAAA;AADD,MADD,EAME,KAAC,QAAD;AACC,MAAA,IAAI,EAAE,CAAE;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAF,CADP;AAEC,MAAA,UAAU,EAAE;AAAA,eAAM,KAAC,QAAD,KAAN;AAAA,OAFb;AAGC,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUA,IAAI,CAACD,IAAf;AAAA,OAHf;AAIC,MAAA,qBAAqB,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAJxB;AAKC,MAAA,SAAS,EAAE;AAAA,eAAMT,UAAS,EAAf;AAAA,OALZ;AAMC,MAAA,UAAU,EAAEV;AANb,MANF;AAAA,IADD;AAiBA,CA/CD;;AAiDA,eAAeD,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { SafeAreaView, StyleSheet, Text, View, StatusBar, TouchableOpacity, FlatList } from 'react-native';\r\nimport styled from 'styled-components';\r\nimport { useNavigation} from '@react-navigation/native';\r\nimport NavCards from '../components/navCards';\r\nimport BottomNav from '../components/bottomNav';\r\nimport ItemCard from '../components/itemCard';\r\nimport { firestoreDb, auth } from '../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n\r\nconst MainArea = styled.SafeAreaView`\r\n\tflex: 1;\r\n\tjustify-content: flex-end;\r\n\t${StatusBar.currentHeight && `margin-top: ${StatusBar.currentHeight}px`};\r\n\tbackground-color: #D77FA1;\r\n`;\r\n\r\nconst Nav = styled.View`height: 10%;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tpadding: 0 20px;\r\n\tbackground-color: white;\r\n`;\r\n\r\nconst UserName = styled.Text`\r\n\tfont-weight: bold;\r\n\tcolor: #3F3F3F;\r\n\tfont-size: 20px;\r\n`\r\n\r\nconst Home = () => {\r\n\r\n\tconst [isFetching, setIsFetching] = useState(false);\r\n\r\n\tconst [ Res, setRes ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tReadData();\r\n\t}, []);\r\n\r\n\r\n\tconst user = auth.currentUser?.email.split('@')[0];\r\n\r\n\tconst onRefresh = () => {\r\n\t\tReadData();\r\n\t\tsetIsFetching(true);\r\n\t}\r\n\r\n\tconst arr = [];\r\n\r\n\tconst ReadData = async () => {\r\n\t\tconst querySnapshot = await getDocs(collection(firestoreDb, 'products'));\r\n\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t// doc.data() is never undefined for query doc snapshots\r\n\t\t\tarr.push(doc.data());\r\n\t\t});\r\n        setRes(arr);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<MainArea>\r\n\t\t\t<Nav>\r\n\t\t\t\t<UserName>\r\n\t\t\t\t\tWelcome {user}\r\n\t\t\t\t</UserName>\r\n\t\t\t</Nav>\r\n\t\t\t\t<FlatList\r\n\t\t\t\t\tdata={[ { name: 1 }]}\r\n\t\t\t\t\trenderItem={() => <ItemCard />}\r\n\t\t\t\t\tkeyExtractor={(item) => item.name}\r\n\t\t\t\t\tcontentContainerStyle={{ padding: 16 }}\r\n\t\t\t\t\tonRefresh={() => onRefresh()}\r\n\t\t\t\t\trefreshing={isFetching}\r\n\t\t\t\t/>\r\n\t\t</MainArea>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}