{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BottomNav from \"../components/bottomNav\";\nimport styled from 'styled-components';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { firestoreDb, storage, storageRef } from \"../firebase\";\nimport { uploadBytes, listAll } from 'firebase/storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainArea = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tflex: 1;\\n\\t\", \";\\n\\tbackground-color: #d77fa1;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\"])), StatusBar.currentHeight && \"margin-top: \" + StatusBar.currentHeight + \"px\");\nvar InputCont = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"width: 80%;\"])));\nvar Input = styled.TextInput(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n\\twidth: 100%;\\n\\tbackground-color: white;\\n\\tmargin-bottom: 15px;\\n\\tpadding: 10px 15px;\\n\\tborder-radius: 15px;\\n\"])));\nvar Heading = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n\\tfont-size: 20px;\\n\\tcolor: white;\\n\\tmargin-bottom: 30px;\\n\\tfont-weight: bold;\\n\"])));\nvar UploadBtn = styled.TouchableOpacity(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n\\tbackground-color: purple;\\n\\tpadding: 10px 15px;\\n\\talign-self: center;\\n\\tborder-radius: 10px;\\n\\tmargin-bottom: 15px;\\n\"])));\nvar BtnText = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n\\tcolor: white;\\n\\tfont-size: 12px;\\n\\tfont-weight: bold;\\n\"])));\n\nvar AddProduct = function AddProduct() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      price = _useState6[0],\n      setPrice = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      quantity = _useState8[0],\n      setQuantity = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Image = _useState10[0],\n      setImage = _useState10[1];\n\n  useEffect(function () {}, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var HandleNewDoc = function HandleNewDoc() {\n    var docRef;\n    return _regeneratorRuntime.async(function HandleNewDoc$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(addDoc(collection(firestoreDb, 'products'), {\n              name: name,\n              description: desc,\n              price: price,\n              quantity: quantity\n            }));\n\n          case 2:\n            docRef = _context2.sent;\n            uploadBytes(storageRef, Image).then(function (snapshot) {\n              console.log('Uploaded a blob or file!');\n            });\n            console.log('Document written with ID: ', docRef.id);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(MainArea, {\n    children: [_jsx(Heading, {\n      children: \"Enter Product Details\"\n    }), _jsxs(InputCont, {\n      children: [_jsx(Input, {\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Description\",\n        multiline: true,\n        numberOfLines: 10,\n        onChangeText: function onChangeText(text) {\n          return setDesc(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Price\",\n        onChangeText: function onChangeText(text) {\n          return setPrice(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Quantity\",\n        onChangeText: function onChangeText(text) {\n          return setQuantity(text);\n        }\n      }), _jsx(UploadBtn, {\n        onPress: pickImage,\n        children: _jsx(BtnText, {\n          children: \"Add Image\"\n        })\n      }), _jsx(UploadBtn, {\n        onPress: HandleNewDoc,\n        children: _jsx(BtnText, {\n          children: \"Submit Data\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default AddProduct;","map":{"version":3,"sources":["D:/react native apps/saad app/saadApp/screens/addProduct.js"],"names":["React","useState","useEffect","BottomNav","styled","useNavigation","ImagePicker","collection","addDoc","firestoreDb","storage","storageRef","uploadBytes","listAll","MainArea","SafeAreaView","StatusBar","currentHeight","InputCont","View","Input","TextInput","Heading","Text","UploadBtn","TouchableOpacity","BtnText","AddProduct","name","setName","desc","setDesc","price","setPrice","quantity","setQuantity","Image","setImage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","HandleNewDoc","description","docRef","then","snapshot","id","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, StatusBar, TextInput, TouchableOpacity } from 'react-native';\r\nimport BottomNav from '../components/bottomNav';\r\nimport styled from 'styled-components';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { firestoreDb, storage, storageRef } from '../firebase';\r\nimport { uploadBytes, listAll } from 'firebase/storage';\r\n\r\nconst MainArea = styled.SafeAreaView`\r\n\tflex: 1;\r\n\t${StatusBar.currentHeight && `margin-top: ${StatusBar.currentHeight}px`};\r\n\tbackground-color: #d77fa1;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst InputCont = styled.View`width: 80%;`;\r\n\r\nconst Input = styled.TextInput`\r\n\twidth: 100%;\r\n\tbackground-color: white;\r\n\tmargin-bottom: 15px;\r\n\tpadding: 10px 15px;\r\n\tborder-radius: 15px;\r\n`;\r\n\r\nconst Heading = styled.Text`\r\n\tfont-size: 20px;\r\n\tcolor: white;\r\n\tmargin-bottom: 30px;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst UploadBtn = styled.TouchableOpacity`\r\n\tbackground-color: purple;\r\n\tpadding: 10px 15px;\r\n\talign-self: center;\r\n\tborder-radius: 10px;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nconst BtnText = styled.Text`\r\n\tcolor: white;\r\n\tfont-size: 12px;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst AddProduct = () => {\r\n\tconst [ name, setName ] = useState('');\r\n\tconst [ desc, setDesc ] = useState('');\r\n\tconst [ price, setPrice ] = useState('');\r\n\tconst [ quantity, setQuantity ] = useState('');\r\n\tconst [ Image, setImage ] = useState('');\r\n\r\n\tuseEffect(() => {}, []);\r\n\r\n\tconst pickImage = async () => {\r\n\t\t// No permissions request is necessary for launching the image library\r\n\t\tlet result = await ImagePicker.launchImageLibraryAsync({\r\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.All,\r\n\t\t\tallowsEditing: true,\r\n\t\t\taspect: [ 4, 3 ],\r\n\t\t\tquality: 1\r\n\t\t});\r\n\r\n\t\tconsole.log(result);\r\n\r\n\t\tif (!result.cancelled) {\r\n\t\t\tsetImage(result.uri);\r\n\t\t}\r\n\t};\r\n\r\n\tconst HandleNewDoc = async () => {\r\n\t\tconst docRef = await addDoc(collection(firestoreDb, 'products'), {\r\n\t\t\tname: name,\r\n\t\t\tdescription: desc,\r\n\t\t\tprice: price,\r\n\t\t\tquantity: quantity\r\n\t\t});\r\n\r\n\t\tuploadBytes(storageRef, Image).then((snapshot) => {\r\n\t\t\tconsole.log('Uploaded a blob or file!');\r\n\t\t});\r\n\r\n\t\tconsole.log('Document written with ID: ', docRef.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MainArea>\r\n\t\t\t<Heading>Enter Product Details</Heading>\r\n\t\t\t<InputCont>\r\n\t\t\t\t<Input placeholder=\"Name\" onChangeText={(text) => setName(text)} />\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\tnumberOfLines={10}\r\n\t\t\t\t\tonChangeText={(text) => setDesc(text)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input placeholder=\"Price\" onChangeText={(text) => setPrice(text)} />\r\n\t\t\t\t<Input placeholder=\"Quantity\" onChangeText={(text) => setQuantity(text)} />\r\n\t\t\t\t<UploadBtn onPress={pickImage}>\r\n\t\t\t\t\t<BtnText>Add Image</BtnText>\r\n\t\t\t\t</UploadBtn>\r\n\t\t\t\t<UploadBtn onPress={HandleNewDoc}>\r\n\t\t\t\t\t<BtnText>Submit Data</BtnText>\r\n\t\t\t\t</UploadBtn>\r\n\t\t\t</InputCont>\r\n\t\t</MainArea>\r\n\t);\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}